{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/src/components/screen.js\";\nimport React, { useState } from 'react';\nimport Contacts from './contacts';\nimport Chats from './chats';\nimport { Tab, Nav, Modal, Button } from 'react-bootstrap';\nimport NewChat from './newchat';\nimport NewContact from './newcontact';\nexport default function Screen({\n  login\n}) {\n  const [activeTab, setActiveTab] = useState('contacts');\n  const chatIsOpen = activeTab === 'chats';\n  const [modalOpen, setModalOpen] = useState(false);\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  function openModal() {\n    setModalOpen(true);\n  }\n\n  function test() {\n    console.log(activeTab);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, login, /*#__PURE__*/React.createElement(Tab.Container, {\n    activekey: activeTab,\n    onSelect: setActiveTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    variant: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventkey: \"contacts\",\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Contacts\")), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventkey: \"chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Chats\"))), /*#__PURE__*/React.createElement(Tab.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Contacts, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(Tab.Pane, {\n    eventKey: \"chats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Chats, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"New contact\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Test\"), /*#__PURE__*/React.createElement(Modal, {\n    show: modalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, chatIsOpen ? /*#__PURE__*/React.createElement(NewChat, {\n    close: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(NewContact, {\n    close: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/src/components/screen.js"],"names":["React","useState","Contacts","Chats","Tab","Nav","Modal","Button","NewChat","NewContact","Screen","login","activeTab","setActiveTab","chatIsOpen","modalOpen","setModalOpen","closeModal","openModal","test","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Contacts from './contacts';\nimport Chats from './chats';\nimport {Tab, Nav, Modal, Button} from 'react-bootstrap';\nimport NewChat from './newchat';\nimport NewContact from './newcontact'\n\nexport default function Screen ({login}) {\n        const [activeTab, setActiveTab] = useState('contacts');\n        const chatIsOpen = activeTab === 'chats';\n        const [modalOpen, setModalOpen] = useState(false);\n\n        function closeModal () {\n        setModalOpen(false)\n        }\n\n        function openModal () {\n        setModalOpen(true)\n        }\n\n        function test () {\n                console.log (activeTab)\n        }\n\n        return (\n        <div> \n            {login}\n            <Tab.Container activekey={activeTab} onSelect={setActiveTab}>  \n                <Nav variant=\"tabs\"> \n                <Nav.Item> \n                        <Nav.Link eventkey=\"contacts\" active>\n                          Contacts\n                        </Nav.Link>\n                </Nav.Item>\n                <Nav.Item> \n                        <Nav.Link eventkey=\"chats\">\n                          Chats\n                        </Nav.Link>\n                </Nav.Item>\n                </Nav>\n                <Tab.Content> \n                        <Tab.Pane eventKey=\"contacts\">\n                         <Contacts /> \n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"chats\">\n                                <Chats /> \n                        </Tab.Pane>\n                </Tab.Content>\n\n                <Button onClick={()=> setModalOpen(true)}>\n                        New contact\n                </Button>\n            </Tab.Container>\n\n            <Button onClick = {test}>\n                    Test\n            </Button>\n\n            <Modal show = {modalOpen}>\n                    {chatIsOpen ?   \n                    <NewChat close = {closeModal}/>  :\n                    <NewContact close = {closeModal} /> \n                    }\n            </Modal>\n        </div>\n        )\n    \n}\n"]},"metadata":{},"sourceType":"module"}