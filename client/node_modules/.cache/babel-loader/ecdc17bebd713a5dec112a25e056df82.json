{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/src/components/newcontact.js\";\nimport React, { useRef } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { ContactsProvider } from '../contexts/contactsProvider';\nimport useLocalStorage from '../hooks/localstorage';\nexport default function NewContact({\n  closeModal\n}) {\n  const nameRef = useRef();\n  const logRef = useRef();\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(login, name) {\n    setContacts(prevcontacts => {\n      return [...prevcontacts, {\n        login,\n        name\n      }];\n    });\n  }\n\n  function submitForm() {\n    createContact(logRef.current.value, nameRef.current.value);\n    closeModal();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"New contact\", /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \" Login \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    ref: logRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \" Name \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    ref: nameRef,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \" Add new contact \"))));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/src/components/newcontact.js"],"names":["React","useRef","Modal","Form","Button","ContactsProvider","useLocalStorage","NewContact","closeModal","nameRef","logRef","contacts","setContacts","createContact","login","name","prevcontacts","submitForm","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAIA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAoC;AAE/C,QAAMC,OAAO,GAAGR,MAAM,EAAtB;AACA,QAAMS,MAAM,GAAGT,MAAM,EAArB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BN,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;AAEA,WAASO,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AACpCH,IAAAA,WAAW,CAACI,YAAY,IAAI;AAC1B,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAACF,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAlB,CAAP;AACD,KAFU,CAAX;AAGC;;AAED,WAASE,UAAT,GAAuB;AACnBJ,IAAAA,aAAa,CAACH,MAAM,CAACQ,OAAP,CAAeC,KAAhB,EAAuBV,OAAO,CAACS,OAAR,CAAgBC,KAAvC,CAAb;AACAX,IAAAA,UAAU;AACb;;AAED,sBACI,uDACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ,eAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAIS,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAEP,MAA/B;AAAuC,IAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAOI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,GAAG,EAAED,OAA/B;AAAwC,IAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,eAYA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAZA,CADA,CAPJ,CADJ;AA0BH","sourcesContent":["import React, {useRef} from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport  {ContactsProvider}  from '../contexts/contactsProvider'\nimport useLocalStorage from '../hooks/localstorage';\n\n\n\nexport default function NewContact({ closeModal }) {\n\n    const nameRef = useRef()\n    const logRef = useRef();\n    const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n    function createContact(login, name) {\n    setContacts(prevcontacts => {\n      return [...prevcontacts, {login, name}]\n    })\n    }\n\n    function submitForm () {\n        createContact(logRef.current.value, nameRef.current.value);\n        closeModal();\n    }\n\n    return (\n        <>\n            <Modal.Header>\n                New contact\n                <Button className=\"btn-secondary\">\n                    Close\n                </Button>\n            </Modal.Header>\n            <Modal.Body>\n            <Form onSubmit = {submitForm}>\n                <Form.Group>\n                    <Form.Label> Login </Form.Label>\n                    <Form.Control type=\"text\" ref={logRef} required>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label> Name </Form.Label>\n                    <Form.Control type=\"text\" ref={nameRef} required>\n                    </Form.Control>\n                </Form.Group>\n            <Button type=\"submit\"> Add new contact </Button>\n            </Form>\n        </Modal.Body>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}