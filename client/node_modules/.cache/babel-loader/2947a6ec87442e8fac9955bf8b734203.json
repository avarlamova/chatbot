{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/client/src/components/contacts.js\";\nimport React, { useState } from 'react';\nimport { useContacts } from '../contexts/contactsProvider';\nimport { ListGroup } from 'react-bootstrap';\nexport default function Contacts({\n  login\n}) {\n  const {\n    contacts\n  } = useContacts();\n  const {\n    selectedContact,\n    setSelectedContact\n  } = useState(0);\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: contact.login,\n    onClick: () => setSelectedContact(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, contact.name)));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/client/src/components/contacts.js"],"names":["React","useState","useContacts","ListGroup","Contacts","login","contacts","selectedContact","setSelectedContact","map","contact","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAIA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAExC,QAAM;AAACC,IAAAA;AAAD,MAAaJ,WAAW,EAA9B;AACA,QAAM;AAACK,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,MAAwCP,QAAQ,CAAC,CAAD,CAAtD;AAEA,sBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBACnB,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAEA,OAAO,CAACL,KAA7B;AACA,IAAA,OAAO,EAAE,MAAMG,kBAAkB,CAACG,KAAD,CADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,OAAO,CAACE,IAHX,CADD,CADH,CADJ;AAWC","sourcesContent":["import React, {useState} from 'react';\nimport { useContacts } from '../contexts/contactsProvider';\nimport { ListGroup } from 'react-bootstrap'\n\n\n\nexport default function Contacts( {login} ) {\n\n    const {contacts} = useContacts()\n    const {selectedContact, setSelectedContact} = useState(0);\n\n    return (\n        <ListGroup variant=\"flush\">\n          {contacts.map(contact => (\n            <ListGroup.Item key={contact.login}\n            onClick={() => setSelectedContact(index)}\n            >\n              {contact.name}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      )\n    }\n"]},"metadata":{},"sourceType":"module"}