{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/client/src/components/conversationWindow.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useConversations } from '../contexts/chatsProvider';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nexport default function ConversationWindow() {\n  const [message, setMessage] = useState('message');\n  const {\n    sendMessage,\n    selectedChat\n  } = useConversations();\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setMessage(e.target.value);\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(recipient => recipient.login), message);\n    setMessage('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1 overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-start justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, selectedConversation ? selectedConversation.messages.map((msg, index) => {\n    const lastMessage = selectedConversation.messages.length - 1 === index;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      ref: lastMessage ? setRef : null,\n      className: `d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `rounded m-1 p-2 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, msg.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, msg.fromMe ? 'You' : msg.senderName));\n  }) : '')), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    required: true,\n    value: message,\n    onChange: handleChange,\n    style: {\n      height: '75px',\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"Send\"))))));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/client/src/components/conversationWindow.js"],"names":["React","useState","useCallback","useConversations","Form","InputGroup","Button","ConversationWindow","message","setMessage","sendMessage","selectedChat","setRef","node","scrollIntoView","smooth","handleChange","e","preventDefault","target","value","handleSubmit","selectedConversation","recipients","map","recipient","login","messages","msg","index","lastMessage","length","fromMe","senderName","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useCallback} from 'react'\nimport {useConversations} from '../contexts/chatsProvider'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\n\n\nexport default function ConversationWindow() {\n\n    const [message, setMessage] = useState('message');\n    const {sendMessage, selectedChat} = useConversations();\n    const setRef = useCallback(node => {\n        if (node) {\n          node.scrollIntoView({ smooth: true })\n        }\n      }, [])\n\n    function handleChange(e) {\n        e.preventDefault();\n        setMessage(e.target.value)\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        sendMessage(selectedConversation.recipients.map(recipient=> recipient.login), message);\n        setMessage('');\n    }\n\n    return (\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end\">\n          {selectedConversation ? selectedConversation.messages.map((msg, index) => {\n            const lastMessage = selectedConversation.messages.length - 1 === index\n            return (\n              <div key={index}\n              ref={lastMessage ? setRef : null}\n              className={`d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}>\n                <div className={`rounded m-1 p-2 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\n                  {msg.message}\n                </div>\n                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>\n                  {msg.fromMe ? 'You' : msg.senderName}\n                </div>\n              </div>\n            )\n          }) : ''}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"m-2\">\n          <InputGroup>\n            <Form.Control\n              as=\"textarea\"\n              required\n              value={message}\n              onChange={handleChange}\n              style={{ height: '75px', resize: 'none' }}\n            />\n            <InputGroup.Append>\n              <Button type=\"submit\">Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n</div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}