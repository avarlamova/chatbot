{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/src/components/contacts.js\";\nimport React, { useState } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useContacts } from '../contexts/contactsProvider';\nexport default function Contacts({\n  login\n}) {\n  const {\n    contacts\n  } = useContacts();\n  const [activeContact, setActiveContact] = useState('Jack');\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, contact.name)));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/src/components/contacts.js"],"names":["React","useState","ListGroup","useContacts","Contacts","login","contacts","activeContact","setActiveContact","map","contact","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAGA,eAAe,SAASC,QAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA6B;AAExC,QAAM;AAACC,IAAAA;AAAD,MAAaH,WAAW,EAA9B;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,MAAD,CAAlD;AAEA,sBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBACnB,oBAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,IADX,CADD,CADH,CADJ;AASC","sourcesContent":["import React, { useState} from 'react';\nimport { ListGroup } from 'react-bootstrap'\nimport { useContacts } from '../contexts/contactsProvider';\n\n\nexport default function Contacts( {login} ) {\n\n    const {contacts} = useContacts()\n    const [activeContact, setActiveContact] = useState('Jack');\n\n    return (\n        <ListGroup variant=\"flush\">\n          {contacts.map(contact => (\n            <ListGroup.Item key={contact.id}>\n              {contact.name}\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n      )\n    }\n\n"]},"metadata":{},"sourceType":"module"}