{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/client/src/components/newchat.js\";\nimport React, { useState } from 'react';\nimport { useContacts } from '../contexts/contactsProvider';\nimport { useChats } from '../contexts/chatsProvider';\nimport { Modal, Form, Button } from 'react-bootstrap';\nexport default function NewChat({\n  closeModal\n}) {\n  const {\n    contacts\n  } = useContacts();\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const {\n    createChat\n  } = useChats();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createChat(selectedContacts);\n    closeModal();\n  }\n\n  function handleChange(login) {\n    setSelectedContacts(prevSelectedContacts => {\n      if (prevSelectedContacts.includes(login)) {\n        return prevSelectedContacts.filter(prevLogin => {\n          return login !== prevLogin;\n        });\n      } else {\n        return [...prevSelectedContacts, login];\n      }\n    });\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"New chat\", /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-secondary\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: contact.login,\n    key: contact.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: contact.name,\n    value: selectedContacts.includes(contact.login),\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" Start the conversation \"))));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/client/src/components/newchat.js"],"names":["React","useState","useContacts","useChats","Modal","Form","Button","NewChat","closeModal","contacts","selectedContacts","setSelectedContacts","createChat","handleSubmit","e","preventDefault","handleChange","login","prevSelectedContacts","includes","filter","prevLogin","handleCheckboxChange","contactId","setSelectedContactIds","prevSelectedContactIds","prevId","map","contact","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AAGA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA+B;AAE1C,QAAM;AAACC,IAAAA;AAAD,MAAaP,WAAW,EAA9B;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM;AAACW,IAAAA;AAAD,MAAeT,QAAQ,EAA7B;;AAGA,WAASU,YAAT,CAAuBC,CAAvB,EAA0B;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAEF,gBAAF,CAAV;AACAF,IAAAA,UAAU;AACb;;AAED,WAASQ,YAAT,CAAuBC,KAAvB,EAA8B;AAC1BN,IAAAA,mBAAmB,CAACO,oBAAoB,IAAI;AACxC,UAAIA,oBAAoB,CAACC,QAArB,CAA8BF,KAA9B,CAAJ,EAA0C;AACxC,eAAOC,oBAAoB,CAACE,MAArB,CAA4BC,SAAS,IAAI;AAC9C,iBAAOJ,KAAK,KAAKI,SAAjB;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAO,CAAC,GAAGH,oBAAJ,EAA0BD,KAA1B,CAAP;AACD;AACF,KARgB,CAAnB;AASH;;AACD,WAASK,oBAAT,CAA8BC,SAA9B,EAAyC;AACrCC,IAAAA,qBAAqB,CAACC,sBAAsB,IAAI;AAC9C,UAAIA,sBAAsB,CAACN,QAAvB,CAAgCI,SAAhC,CAAJ,EAAgD;AAC9C,eAAOE,sBAAsB,CAACL,MAAvB,CAA8BM,MAAM,IAAI;AAC7C,iBAAOH,SAAS,KAAKG,MAArB;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAO,CAAC,GAAGD,sBAAJ,EAA4BF,SAA5B,CAAP;AACD;AACF,KARoB,CAArB;AASD;;AAGH,sBACI,uDACA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEQ,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEf,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFR,CADA,eAOI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,QAAQ,CAACkB,GAAT,CAAcC,OAAO,iBAClB,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEA,OAAO,CAACX,KAA/B;AAAsC,IAAA,GAAG,EAAEW,OAAO,CAACX,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,KAAK,EAAEW,OAAO,CAACC,IAFf;AAGA,IAAA,KAAK,EAAEnB,gBAAgB,CAACS,QAAjB,CAA0BS,OAAO,CAACX,KAAlC,CAHP;AAIA,IAAA,QAAQ,EAAID,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADD,eAWA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAXA,CADJ,CAPJ,CADJ;AAyBH","sourcesContent":["import React, { useState } from 'react'\nimport {useContacts} from '../contexts/contactsProvider'\nimport {useChats} from '../contexts/chatsProvider'\nimport { Modal, Form, Button } from 'react-bootstrap'\n \n\nexport default function NewChat({closeModal}) {\n\n    const {contacts} = useContacts();\n    const [selectedContacts, setSelectedContacts] = useState([]);\n    const {createChat} = useChats();\n\n\n    function handleSubmit (e) {\n        e.preventDefault();\n        createChat (selectedContacts);\n        closeModal();\n    }\n\n    function handleChange (login) {\n        setSelectedContacts(prevSelectedContacts => {\n            if (prevSelectedContacts.includes(login)) {\n              return prevSelectedContacts.filter(prevLogin => {\n                return login !== prevLogin\n              })\n            } else {\n              return [...prevSelectedContacts, login]\n            }\n          })\n    }\n    function handleCheckboxChange(contactId) {\n        setSelectedContactIds(prevSelectedContactIds => {\n          if (prevSelectedContactIds.includes(contactId)) {\n            return prevSelectedContactIds.filter(prevId => {\n              return contactId !== prevId\n            })\n          } else {\n            return [...prevSelectedContactIds, contactId]\n          }\n        })\n      }\n    \n\n    return (  \n        <>\n        <Modal.Header>\n                New chat\n                <Button className=\"btn-secondary\" onClick={closeModal}>\n                    Close\n                </Button>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                {contacts.map (contact => (\n                    <Form.Group controlId={contact.login} key={contact.login}>\n                        <Form.Check \n                        type=\"checkbox\" \n                        label={contact.name} \n                        value={selectedContacts.includes(contact.login)}\n                        onChange = {handleChange}>\n                        </Form.Check>\n                    </Form.Group>\n                ))}\n                <Button type=\"submit\"> Start the conversation </Button>\n                </Form>\n        </Modal.Body>\n    </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}