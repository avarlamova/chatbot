{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nexport default function useLocalStorage(key, initialValue) {\n  const [value, setValue] = useState(() => {\n    const jsonvalue = localStorage.getItem(key);\n    if (jsonvalue !== null) return JSON.parse(jsonvalue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect = (() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n  /*\n  const [value, setValue] = useState(()=> {\n        const jsonValue = localStorage.getItem(key);\n        if (jsonValue) {\n            return JSON.parse(jsonValue);\n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        }\n        else {\n            return initialValue\n        }\n    });\n     useEffect (()=> {\n        localStorage.setItem(key, JSON.stringify(value))\n    },\n    [key,value])\n     return [value, setValue]\n    */\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/src/hooks/localstorage.js"],"names":["React","useEffect","useState","useLocalStorage","key","initialValue","value","setValue","jsonvalue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAEzD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,MAAK;AACtC,UAAMM,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAlB;AACA,QAAII,SAAS,KAAG,IAAhB,EAAsB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACtB,QAAI,OAAQH,YAAR,KAA0B,UAA9B,EAA0C;AACxC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAGK;AACH,aAAOA,YAAP;AACD;AACF,GATiC,CAAlC;AAWAJ,EAAAA,SAAS,IAAI,MAAK;AAChBQ,IAAAA,YAAY,CAACI,OAAb,CAAqBT,GAArB,EAA0BO,IAAI,CAACG,SAAL,CAAeR,KAAf,CAA1B;AACD,GAFY,EAEV,CAACF,GAAD,EAAME,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACA;;;;;;;;;;;;;;;;;;;AAsBD","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nexport default function useLocalStorage(key, initialValue) {\n    \n  const [value, setValue] = useState(()=> {\n    const jsonvalue = localStorage.getItem(key)\n    if (jsonvalue!==null) return JSON.parse(jsonvalue)\n    if (typeof (initialValue) === 'function') {\n      return initialValue()\n    }\n    else {\n      return initialValue\n    }\n  })\n  \n  useEffect = (()=> {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n  /*\n  const [value, setValue] = useState(()=> {\n        const jsonValue = localStorage.getItem(key);\n        if (jsonValue) {\n            return JSON.parse(jsonValue);\n        }\n        if (typeof initialValue === 'function') {\n            return initialValue()\n        }\n        else {\n            return initialValue\n        }\n    });\n\n    useEffect (()=> {\n        localStorage.setItem(key, JSON.stringify(value))\n    },\n    [key,value])\n\n    return [value, setValue]\n    */\n\n}"]},"metadata":{},"sourceType":"module"}