{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/src/contexts/contactsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/localstorage';\nexport default function ContactsProvider({\n  children\n}) {\n  const ContactsContext = React.createContext();\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(login, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        login,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/src/contexts/contactsProvider.js"],"names":["React","useContext","useLocalStorage","ContactsProvider","children","ContactsContext","createContext","contacts","setContacts","createContact","login","name","prevContacts"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAEA,eAAe,SAASC,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAsC;AACnD,QAAMC,eAAe,GAAGL,KAAK,CAACM,aAAN,EAAxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;AAEA,WAASO,aAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClCH,IAAAA,WAAW,CAACI,YAAY,IAAI;AAC1B,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAACF,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAlB,CAAP;AACD,KAFU,CAAX;AAGD;;AAED,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACJ,MAAAA,QAAD;AAAWE,MAAAA;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,QADD,CADF;AAKD","sourcesContent":["import React, {useContext} from 'react'\nimport useLocalStorage from '../hooks/localstorage';\n\nexport default function ContactsProvider({children}) {\n  const ContactsContext = React.createContext()\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n  function createContact(login, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {login, name}]\n    })\n  }\n\n  return (\n    <ContactsContext.Provider value={{contacts, createContact}}>\n    {children}\n    </ContactsContext.Provider>  \n  )\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}