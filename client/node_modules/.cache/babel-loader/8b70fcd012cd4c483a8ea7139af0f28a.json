{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/client/src/components/conversationWindow.js\";\nimport React, { useState, useCallback } from 'react';\nimport { useChats } from '../contexts/chatsProvider';\nexport default function ConversationWindow() {\n  const [message, setMessage] = useState('message');\n  const {\n    sendMessage,\n    selectedChat\n  } = useChats();\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setMessage(e.target.value);\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedChat.receivers.map(receiver => receiver.login), message);\n    setMessage('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1 overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-start justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, selectedChat ? selectedChat.messages.map((msg, index) => {\n    const lastMessage = selectedChat.messages.length - 1 === index;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      ref: lastMessage ? setRef : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, msg.message), /*#__PURE__*/React.createElement(\"div\", {\n      className: msg.fromMe ? 'text-right' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, msg.fromMe ? 'You' : msg.senderName));\n  }) : '')), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    required: true,\n    value: message,\n    onChange: handleChange,\n    style: {\n      height: '75px',\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Send\"))))));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/client/src/components/conversationWindow.js"],"names":["React","useState","useCallback","useChats","ConversationWindow","message","setMessage","sendMessage","selectedChat","setRef","node","scrollIntoView","smooth","handleChange","e","preventDefault","target","value","handleSubmit","receivers","map","receiver","login","messages","msg","index","lastMessage","length","fromMe","senderName","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useCallback} from 'react'\nimport {useChats} from '../contexts/chatsProvider'\n\nexport default function ConversationWindow() {\n\n    const [message, setMessage] = useState('message');\n    const {sendMessage, selectedChat} = useChats();\n    const setRef = useCallback(node => {\n        if (node) {\n          node.scrollIntoView({ smooth: true })\n        }\n      }, [])\n\n    function handleChange(e) {\n        e.preventDefault();\n        setMessage(e.target.value)\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        sendMessage(selectedChat.receivers.map(receiver => receiver.login), message);\n        setMessage('');\n    }\n\n    return (\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end\">\n          {selectedChat ? selectedChat.messages.map((msg, index) => {\n            const lastMessage = selectedChat.messages.length - 1 === index\n            return (\n              <div key={index}\n              ref={lastMessage ? setRef : null}>\n                <div>\n                  {msg.message}\n                </div>\n                <div className={msg.fromMe ? 'text-right' : ''}>\n                  {msg.fromMe ? 'You' : msg.senderName}\n                </div>\n              </div>\n            )\n          }) : ''}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"m-2\">\n          <InputGroup>\n            <Form.Control\n              as=\"textarea\"\n              required\n              value={message}\n              onChange={handleChange}\n              style={{ height: '75px', resize: 'none' }}\n            />\n            <InputGroup.Append>\n              <Button type=\"submit\">Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n</div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}