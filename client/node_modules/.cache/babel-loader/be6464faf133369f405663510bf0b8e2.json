{"ast":null,"code":"var _jsxFileName = \"/Users/anastasia/Documents/GitHub/chatbot/client/src/components/chats.js\";\nimport React from 'react';\nimport { useChats } from '../contexts/chatsProvider';\nimport { ListGroup } from 'react-bootstrap';\nexport default function Chats() {\n  const {\n    chats,\n    selectConversationIndex\n  } = useChats();\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, chats.map((chat, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    action: true,\n    onClick: () => selectConversationIndex(index),\n    active: chat.selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, chat.recipients.map(r => r.name).join(', '))));\n}","map":{"version":3,"sources":["/Users/anastasia/Documents/GitHub/chatbot/client/src/components/chats.js"],"names":["React","useChats","ListGroup","Chats","chats","selectConversationIndex","map","chat","index","selected","recipients","r","name","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqCJ,QAAQ,EAAnD;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT,oBAAC,SAAD,CAAW,IAAX;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,OAAO,EAAE,MAAMH,uBAAuB,CAACG,KAAD,CAHxC;AAIE,IAAA,MAAM,EAAED,IAAI,CAACE,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,IAAI,CAACG,UAAL,CAAgBJ,GAAhB,CAAoBK,CAAC,IAAIA,CAAC,CAACC,IAA3B,EAAiCC,IAAjC,CAAsC,IAAtC,CALH,CADD,CADH,CADF;AAaD","sourcesContent":["import React from 'react'\nimport { useChats } from '../contexts/chatsProvider';\nimport { ListGroup } from 'react-bootstrap'\n\nexport default function Chats() {\n  const { chats, selectConversationIndex } = useChats()\n\n  return (\n    <ListGroup variant=\"flush\">\n      {chats.map((chat, index) => (\n        <ListGroup.Item\n          key={index}\n          action\n          onClick={() => selectConversationIndex(index)}\n          active={chat.selected}>\n          {chat.recipients.map(r => r.name).join(', ')}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}